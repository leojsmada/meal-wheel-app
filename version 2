package com.example.animationproject;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.media.MediaPlayer;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.RotateAnimation;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.Random;


public class MainActivity extends AppCompatActivity {

    Button button;
    TextView textView;
    ImageView spinning_wheel;
    MediaPlayer mp;
    Random r;
    int degree = 0, degree_old = 0;
    //12 sections on the wheels? (30 degrees each)
    private static final float FACTOR = 30.0f;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mp = MediaPlayer.create(this, R.raw.wheel_spinning_single);
        button = (Button) findViewById(R.id.button);
        textView = (TextView) findViewById(R.id.textView);
        spinning_wheel = (ImageView) findViewById(R.id.spinning_wheel);
        r = new Random();


        button.setOnClickListener(new View.OnClickListener() {
            @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
            @Override
            public void onClick(View v) {
                degree_old = degree % 360;
                degree = r.nextInt(3600) + 720;//<-----------was 720
                RotateAnimation rotate = new RotateAnimation(degree_old, degree, RotateAnimation.RELATIVE_TO_SELF,
                        0.5f, RotateAnimation.RELATIVE_TO_SELF, 0.5f);
                rotate.setDuration(7250);
                rotate.setFillAfter(true);


                rotate.setAnimationListener(new Animation.AnimationListener() {
                    @Override
                    public void onAnimationStart(Animation animation) {
                        textView.setText("");


                    }

                    @Override
                    public void onAnimationEnd(Animation animation) {
                        //textView.setText(currentNumber(360 - (degree % 360)));
                    }

                    @Override
                    public void onAnimationRepeat(Animation animation) {

                    }


                });


                // mp.isLooping();


                spinning_wheel.startAnimation(rotate);
                startSound();


            }


            public void startSound() {
                mp.start();
                mp.setLooping(true);
            }

// When this method is called , the playing of the sound is stopped

            public void stopSound() {
                if (mp != null) {
                    if (mp.isPlaying()) {
                        mp.stop();
                        mp.setLooping(false);
                    }

//Finally release everything and clear out the mediaplayer object

                    mp.release();
                    mp = null;
                }

            }

        });

    }


}
//    private String currentSelection(int degrees)
//    {
//        String text = "";
//
//        if(degrees >= (FACTOR * 1) && degrees < (FACTOR)* 1  )
//
//        {
//            text = "red";
//        }
//
//        if(degrees >= (FACTOR * 2) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 3) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 4) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 5) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 6) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 7) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 8) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 9) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 10) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 11) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        if(degrees >= (FACTOR * 12) && degrees < (FACTOR)* 3  )
//
//        {
//            text = "";
//        }
//        return text;
//    }



package com.example.animationproject;

import android.app.Activity;
import android.graphics.drawable.AnimationDrawable;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.Button;



public class AnimationWithSound extends Activity implements View.OnClickListener
{

//Getting a reference of all the views on the UI


    Button btstart, btstop;

// Getting a reference of the frameanimation and the Animationsound class

    AnimationDrawable frameAnimation;
    AnimationSound asound;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

     // spinning_wheel = (ImageView) findViewById(R.id.spinning_wheel);
        btstart = (Button) findViewById(R.id.btStart);
        btstop = (Button) findViewById(R.id.btStop);

// To start with , just need the start button to be enabled, user should
        // not be able to click stop until the animation is started

        btstart.setEnabled(true);
        btstop.setEnabled(false);

// Registering the buttons to the onclicklistener

        btstart.setOnClickListener(this);
        btstop.setOnClickListener(this);

// Setting the background of the image view to the animation XML which
// defines how the image frames should be displayed one after the other


// Instantiating the frameanimation. Getting an instance of
        // AnimationDrawable



    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.

        return true;
    }

    @Override
    public void onClick(View v) {
        // TODO Auto-generated method stub
        int id = v.getId();
        switch (id) {
            case R.id.btStart:

// First create an instance of the AnimationSound class. This will
                // call the AnimationSound constructor in AnimationSound.java and
                // create an instance of the MP3 sound file. Passing the MP3 file
                // which will be used to create the instance of the MediaPlayer

                asound = new AnimationSound(this, R.raw.wheel_spinning_single);

// Starting the animation calling the startsound method in
                // AnimationSound class disabling the start button so that user
                // cannot click it until the animation is stopped enabling the stop
// animation button to allow te user to stop the animation

                frameAnimation.start();
                asound.startsound();
                btstart.setEnabled(false);
                btstop.setEnabled(true);
                break;

            case R.id.btStop:
                // On click of the stop animation button, stopping the frame
                // animation and also the sound enabling the start animation button
                // so that user can restart the animation disabling the stop
                // animation button, so that user cannot click it until the
                // animation is started

                frameAnimation.stop();
                asound.stopsound();
                btstart.setEnabled(true);
                btstop.setEnabled(false);
                break;
            default:
                break;
        }

    }

}


package com.example.animationproject;

import android.content.Context;
import android.media.MediaPlayer;

public class AnimationSound extends MainActivity
{

  // This class is used to handle playing the sounds when animation is started/stopped



        AnimationSound(Context context, int id)
        {

// Creates an instance of the mediaplayer using the passed mp3 file

            mp = MediaPlayer.create(context, id);

        }

// When this method is called, the sound is played in a loop until the stopsound method is called

        public void startsound()
        {
            mp.start();
            mp.setLooping(true);
        }

// When this method is called , the playing of the sound is stopped

        public void stopsound()
        {
            if (mp != null) {
                if (mp.isPlaying())
                {
                    mp.stop();
                    mp.setLooping(false);
                }

//Finally release everything and clear out the mediaplayer object

                mp.release();
                mp = null;
            }

        }
    }



<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">


    <ImageView
        android:id="@+id/iv_pointer"
        android:layout_width="53dp"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginStart="173dp"
        android:layout_marginTop="72dp"
        android:scaleType="centerInside"
        android:visibility="visible" />



    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_centerHorizontal="true"
        android:layout_marginBottom="48dp"
        android:text="SPIN" />

    <ImageView
        android:id="@+id/spinning_wheel"
        android:layout_width="wrap_content"
        android:layout_height="629dp"
        android:layout_alignParentStart="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_centerInParent="true"
        android:layout_marginStart="-13dp"
        android:layout_marginTop="-51dp"
        android:layout_marginEnd="-2dp"
        android:scaleType="centerInside"
        app:srcCompat="@drawable/spinning_wheel" />

    <TextView
        android:id="@+id/textView"
        android:layout_width="113dp"
        android:layout_height="44dp"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="25dp"
        android:text="TextView" />

    <Button
        android:id="@+id/btStart"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="17dp"
        android:layout_marginEnd="322dp"
        android:layout_marginBottom="97dp"
        android:text="START" />

    <Button
        android:id="@+id/btStop"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="322dp"
        android:layout_marginTop="11dp"
        android:layout_marginEnd="17dp"
        android:layout_marginBottom="97dp"
        android:text="STOP"
        android:visibility="visible" />


</RelativeLayout>
